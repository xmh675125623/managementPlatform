<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/data/jpa
						http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
						http://www.springframework.org/schema/jee
						http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">



	<!-- Root Context: 定义所有其他Web组件可见的共享资源 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	
	
	<!-- 1.数据源配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="10" /><!-- 初始化连接大小 -->
		<property name="maxActive" value="40" /><!-- 连接池最大使用连接数量 -->
		<property name="maxIdle" value="20" /><!-- 连接池最大空闲 -->
		<property name="minIdle" value="2" /><!-- 连接池最小空闲 -->
		<property name="maxWait" value="60000" /><!-- 获取连接最大等待时间 -->
		<property name="testOnBorrow" value="true" /> 
		<property name="testWhileIdle" value="true" /> 
		<property name="validationQuery" value="select 1" /> 
	</bean>
	
	
	
	<!-- 2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源。MyBatis定义数据源,同意加载配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
		<property name="dataSource" ref="dataSource" ></property>
<!-- 		<property name="configLocation" value="classpath:mybatis-config.xml" ></property> -->
	</bean>
	
	
	
	<!-- 3. mybatis自动扫描加载Sql映射文件/接口   basePackage:指定sql映射文件/接口所在的包（自动扫描） -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" >
		<property name="basePackage" value="com.jiuzhou.plat.mapper,com.jiuzhou.firewall.mapper" ></property>
	</bean>
	
	
	
	<!-- 4. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源  -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	
	
	<!-- 5. 使用声明式事务   transaction-manager：引用上面定义的事务管理器  -->
	<tx:annotation-driven transaction-manager="txManager" />
	<tx:advice id="txAdvice" transaction-manager="txManager">  
		<tx:attributes>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception" />
			
			<tx:method name="get*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="select*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="search*" propagation="NOT_SUPPORTED" read-only="false"/>
			<tx:method name="find*" propagation="REQUIRED" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="interceptorPointCuts"  expression="execution(* com.jiuzhou.plat.service..*.*(..)) or execution(* com.jiuzhou.firewall.service..*.*(..))" />   
		<aop:advisor advice-ref="txAdvice"  pointcut-ref="interceptorPointCuts" />   
	</aop:config>   
	
	
	
	<!-- 6.启动包扫描以及事务管理注解支持 -->
	<context:component-scan base-package="com.jiuzhou.plat.service" />
	<context:component-scan base-package="com.jiuzhou.firewall.service" />
	
	<context:component-scan base-package="com.jiuzhou.plat.bean" />
	<context:component-scan base-package="com.jiuzhou.firewall.bean" />
	
	<context:component-scan base-package="com.jiuzhou.firewall.mapper" />
	<context:component-scan base-package="com.jiuzhou.plat.mapper" />
	
	<context:component-scan base-package="com.jiuzhou.plat.thread" />
	<context:component-scan base-package="com.jiuzhou.plat.websocket" />
	
	<context:property-placeholder location="classpath:jdbc.properties" />
	

	<bean class="com.jiuzhou.plat.init.SpringContextHolder"></bean>
</beans>