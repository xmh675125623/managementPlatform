<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jiuzhou.plat.mapper.DatabaseTableMapper">


	<select id="getAuditLogTableInfoList" resultType="com.jiuzhou.plat.bean.DatabaseTableInfo">
		use information_schema;
		SELECT 
			table_name,
			table_rows,
			ROUND(data_length/1024/1024,4) AS data_size,
			ROUND(index_length/1024/1024,4) AS index_size,
			ROUND((data_length+index_length)/1024/1024,4) AS total_size,
			create_time
		FROM 
			TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND table_name LIKE 'audit_log%'
		ORDER BY table_name DESC;
		use jiuzhou_management_platform;
	</select>
	
	
	<select id="getAuditLogTableInfoListOrderByDate" resultType="com.jiuzhou.plat.bean.DatabaseTableInfo">
		use information_schema;
		SELECT 
			table_name,
			table_rows,
			ROUND(data_length/1024/1024,4) AS data_size,
			ROUND(index_length/1024/1024,4) AS index_size,
			ROUND((data_length+index_length)/1024/1024,4) AS total_size,
			create_time
		FROM 
			TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND table_name LIKE 'audit_log%'
		ORDER BY create_time DESC;
		use jiuzhou_management_platform;
	</select>
	
	
	<select id="getFirstAuditLogTableName" resultType="String">
		use information_schema;
		SELECT 
			table_name
		FROM 
			TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND table_name LIKE 'audit_log%'
		ORDER BY create_time ASC 
		LIMIT 1;
		use jiuzhou_management_platform;
	</select>
	
	
	<select id="getFirewallLogTableInfoList" resultType="com.jiuzhou.plat.bean.DatabaseTableInfo">
		use information_schema;
		SELECT 
			table_name,
			table_rows,
			ROUND(data_length/1024/1024,4) AS data_size,
			ROUND(index_length/1024/1024,4) AS index_size,
			ROUND((data_length+index_length)/1024/1024,4) AS total_size,
			create_time
		FROM 
			TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND table_name LIKE 'firewall_log%'
		ORDER BY table_name DESC;
		use jiuzhou_management_platform;
	</select>
	
	
	<select id="getFirewallLogTableInfoListOrderByDate" resultType="com.jiuzhou.plat.bean.DatabaseTableInfo">
		use information_schema;
		SELECT 
			table_name,
			table_rows,
			ROUND(data_length/1024/1024,4) AS data_size,
			ROUND(index_length/1024/1024,4) AS index_size,
			ROUND((data_length+index_length)/1024/1024,4) AS total_size,
			create_time
		FROM 
			TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND table_name LIKE 'firewall_log%'
		ORDER BY create_time DESC;
		use jiuzhou_management_platform;
	</select>
	
	
	<select id="getFirstFirewallLogTableName" resultType="String">
		use information_schema;
		SELECT 
			table_name
		FROM 
			TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND table_name LIKE 'firewall_log%'
		ORDER BY create_time ASC 
		LIMIT 1;
		use jiuzhou_management_platform;
	</select>
	
	
	<select id="getIsolationLogTableInfoList" resultType="com.jiuzhou.plat.bean.DatabaseTableInfo">
		use information_schema;
		SELECT 
			table_name,
			table_rows,
			ROUND(data_length/1024/1024,4) AS data_size,
			ROUND(index_length/1024/1024,4) AS index_size,
			ROUND((data_length+index_length)/1024/1024,4) AS total_size,
			create_time
		FROM 
			TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND table_name LIKE 'isolation_log%'
		ORDER BY table_name DESC;
		use jiuzhou_management_platform;
	</select>
	
	
	<select id="getIsolationLogTableInfoListOrderByDate" resultType="com.jiuzhou.plat.bean.DatabaseTableInfo">
		use information_schema;
		SELECT 
			table_name,
			table_rows,
			ROUND(data_length/1024/1024,4) AS data_size,
			ROUND(index_length/1024/1024,4) AS index_size,
			ROUND((data_length+index_length)/1024/1024,4) AS total_size,
			create_time
		FROM 
			TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND table_name LIKE 'isolation_log%'
		ORDER BY create_time DESC;
		use jiuzhou_management_platform;
	</select>
	
	
	<select id="getFirstIsolationLogTableName" resultType="String">
		use information_schema;
		SELECT 
			table_name
		FROM 
			TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND table_name LIKE 'isolation_log%'
		ORDER BY create_time ASC 
		LIMIT 1;
		use jiuzhou_management_platform;
	</select>
	
	
	<select id="getIDSLogTableInfoList" resultType="com.jiuzhou.plat.bean.DatabaseTableInfo">
		use information_schema;
		SELECT 
			table_name,
			table_rows,
			ROUND(data_length/1024/1024,4) AS data_size,
			ROUND(index_length/1024/1024,4) AS index_size,
			ROUND((data_length+index_length)/1024/1024,4) AS total_size,
			create_time
		FROM 
			TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND table_name LIKE 'ids_log%'
		ORDER BY table_name DESC;
		use jiuzhou_management_platform;
	</select>
	
	
	<select id="getIDSLogTableInfoListOrderByDate" resultType="com.jiuzhou.plat.bean.DatabaseTableInfo">
		use information_schema;
		SELECT 
			table_name,
			table_rows,
			ROUND(data_length/1024/1024,4) AS data_size,
			ROUND(index_length/1024/1024,4) AS index_size,
			ROUND((data_length+index_length)/1024/1024,4) AS total_size,
			create_time
		FROM 
			TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND table_name LIKE 'ids_log%'
		ORDER BY create_time DESC;
		use jiuzhou_management_platform;
	</select>
	
	
	<select id="getFirstIDSLogTableName" resultType="String">
		use information_schema;
		SELECT 
			table_name
		FROM 
			TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND table_name LIKE 'ids_log%'
		ORDER BY create_time ASC 
		LIMIT 1;
		use jiuzhou_management_platform;
	</select>
	
	
	<select id="getGatewayLogTableInfoList" resultType="com.jiuzhou.plat.bean.DatabaseTableInfo">
		use information_schema;
		SELECT 
			table_name,
			table_rows,
			ROUND(data_length/1024/1024,4) AS data_size,
			ROUND(index_length/1024/1024,4) AS index_size,
			ROUND((data_length+index_length)/1024/1024,4) AS total_size,
			create_time
		FROM 
			TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND table_name LIKE 'gateway_log%'
		ORDER BY table_name DESC;
		use jiuzhou_management_platform;
	</select>
	
	
	<select id="getGatewayLogTableInfoListOrderByDate" resultType="com.jiuzhou.plat.bean.DatabaseTableInfo">
		use information_schema;
		SELECT 
			table_name,
			table_rows,
			ROUND(data_length/1024/1024,4) AS data_size,
			ROUND(index_length/1024/1024,4) AS index_size,
			ROUND((data_length+index_length)/1024/1024,4) AS total_size,
			create_time
		FROM 
			TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND table_name LIKE 'gateway_log%'
		ORDER BY create_time DESC;
		use jiuzhou_management_platform;
	</select>
	
	
	<select id="getFirstGatewayLogTableName" resultType="String">
		use information_schema;
		SELECT 
			table_name
		FROM 
			TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND table_name LIKE 'gateway_log%'
		ORDER BY create_time ASC 
		LIMIT 1;
		use jiuzhou_management_platform;
	</select>
	
	
	<select id="getOperateLogTableInfoList" resultType="com.jiuzhou.plat.bean.DatabaseTableInfo">
		use information_schema;
		SELECT 
			table_name,
			table_rows,
			ROUND(data_length/1024/1024,4) AS data_size,
			ROUND(index_length/1024/1024,4) AS index_size,
			ROUND((data_length+index_length)/1024/1024,4) AS total_size,
			create_time
		FROM 
			TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND table_name LIKE 'plat_operate_log%'
		ORDER BY create_time DESC;
		use jiuzhou_management_platform;
	</select>
	
	<select id="getFirstOperateLogTableName" resultType="String">
		use information_schema;
		SELECT 
			table_name
		FROM 
			TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND table_name LIKE 'plat_operate_log%'
		ORDER BY create_time ASC 
		LIMIT 1;
		use jiuzhou_management_platform;
	</select>
	
	
	<select id="getTableName" resultType="java.lang.String">
		use information_schema;
		SELECT 
			table_name 
		FROM 
			information_schema.TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND table_name =#{table_name};
		use jiuzhou_management_platform;
	</select>
	
	
	<select id="getTableNameBath" resultType="java.lang.String">
		use information_schema;
		SELECT 
			table_name 
		FROM 
			information_schema.TABLES 
		WHERE 
			table_schema='jiuzhou_management_platform' AND
			table_name IN 
			<foreach collection="table_names" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
			;
		use jiuzhou_management_platform;
	</select>
	
	
	<update id="createOperateLogTable">
		CREATE TABLE ${table_name} (
			`id` bigint(20) NOT NULL AUTO_INCREMENT,
		    `type` varchar(11) DEFAULT NULL,
		    `function_id` int(11) DEFAULT NULL COMMENT '功能id',
		    `function_name` varchar(255) DEFAULT NULL COMMENT '功能名称',
		    `description` text COMMENT '描述',
		    `user_id` int(11) DEFAULT NULL COMMENT '用户id',
		    `user_name` varchar(255) DEFAULT NULL COMMENT '操作者',
		    `auth_result` varchar(255) DEFAULT NULL COMMENT '是否通过验证',
		    `ip_address` varchar(255) DEFAULT NULL COMMENT 'ip地址',
		    `add_time` varchar(255) DEFAULT NULL COMMENT '添加时间',
		    PRIMARY KEY (`id`)
		) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT='用户界面操作日志';
	</update>
	
	
	<update id="createAuditLogTable">
		CREATE TABLE ${table_name} (
			`id` bigint(20) NOT NULL AUTO_INCREMENT,
			`facility` int(11) DEFAULT NULL COMMENT '',
			`severity` int(11) DEFAULT NULL COMMENT '事件等级',
			`tag` varchar(255) DEFAULT NULL COMMENT '模块',
			`origin` varchar(255) DEFAULT NULL COMMENT '设备名',
			`message` text COMMENT '信息',
			`add_time` datetime DEFAULT NULL COMMENT '日志时间',
			
			
			`source_ip` varchar(255) DEFAULT NULL COMMENT '源IP',
			`target_ip` varchar(255) DEFAULT NULL COMMENT '目的IP',
		  	`event_type` int(255) DEFAULT NULL COMMENT '事件类型，1：正常事件，2：异常事件',
		  	`level` int(255) DEFAULT NULL COMMENT '事件等级，1：信息，2：注意，3：告警',
		  	`module` int(255) DEFAULT NULL COMMENT '事件模块，1：普通，2：USB，3：NIC，4：MODBUS_TCP',
		  	`context` text COMMENT '描述',
		  	PRIMARY KEY (`id`),
		  	KEY `module` (`module`),
		  	KEY `severity` (`severity`) USING BTREE,
		  	KEY `tag` (`tag`) USING BTREE,
			KEY `level` (`level`) USING BTREE,
			KEY `source_ip` (`source_ip`) USING BTREE,
			KEY `target_ip` (`target_ip`) USING BTREE
		) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT='审计日志';
	</update>
	
	
	<update id="createFirewallLogTable">
		CREATE TABLE ${table_name} (
			`id` bigint(20) NOT NULL AUTO_INCREMENT,
			`facility` int(11) DEFAULT NULL COMMENT '',
			`severity` int(11) DEFAULT NULL COMMENT '事件等级',
			`tag` varchar(255) DEFAULT NULL COMMENT '模块',
			`origin` varchar(255) DEFAULT NULL COMMENT '设备名',
			`message` text COMMENT '信息',
			`add_time` datetime DEFAULT NULL COMMENT '日志时间',
			
			
			`source_ip` varchar(255) DEFAULT NULL COMMENT '源IP',
			`target_ip` varchar(255) DEFAULT NULL COMMENT '目的IP',
		  	`event_type` int(255) DEFAULT NULL COMMENT '事件类型，1：正常事件，2：异常事件',
		  	`level` int(255) DEFAULT NULL COMMENT '事件等级，1：信息，2：注意，3：告警',
		  	`module` int(255) DEFAULT NULL COMMENT '事件模块，1：普通，2：USB，3：NIC，4：MODBUS_TCP',
		  	`context` text COMMENT '描述',
		  	PRIMARY KEY (`id`),
		  	KEY `module` (`module`),
		  	KEY `severity` (`severity`) USING BTREE,
		  	KEY `tag` (`tag`) USING BTREE,
			KEY `level` (`level`) USING BTREE,
			KEY `source_ip` (`source_ip`) USING BTREE,
			KEY `target_ip` (`target_ip`) USING BTREE
		) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT='防火墙日志';
	</update>
	
	
	<update id="createIsolationLogTable">
		CREATE TABLE ${table_name} (
			`id` bigint(20) NOT NULL AUTO_INCREMENT,
			`facility` int(11) DEFAULT NULL COMMENT '',
			`severity` int(11) DEFAULT NULL COMMENT '事件等级',
			`tag` varchar(255) DEFAULT NULL COMMENT '模块',
			`origin` varchar(255) DEFAULT NULL COMMENT '设备名',
			`message` text COMMENT '信息',
			`add_time` datetime DEFAULT NULL COMMENT '日志时间',
			
			
			`source_ip` varchar(255) DEFAULT NULL COMMENT '源IP',
			`target_ip` varchar(255) DEFAULT NULL COMMENT '目的IP',
		  	`event_type` int(255) DEFAULT NULL COMMENT '事件类型，1：正常事件，2：异常事件',
		  	`level` int(255) DEFAULT NULL COMMENT '事件等级，1：信息，2：注意，3：告警',
		  	`module` int(255) DEFAULT NULL COMMENT '事件模块，1：普通，2：USB，3：NIC，4：MODBUS_TCP',
		  	`context` text COMMENT '描述',
		  	PRIMARY KEY (`id`),
		  	KEY `module` (`module`),
		  	KEY `severity` (`severity`) USING BTREE,
		  	KEY `tag` (`tag`) USING BTREE,
			KEY `level` (`level`) USING BTREE,
			KEY `source_ip` (`source_ip`) USING BTREE,
			KEY `target_ip` (`target_ip`) USING BTREE
		) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT='审计日志';
	</update>
	
	
	<update id="createIDSLogTable">
		CREATE TABLE ${table_name} (
			`id` bigint(20) NOT NULL AUTO_INCREMENT,
			`facility` int(11) DEFAULT NULL COMMENT '',
			`severity` int(11) DEFAULT NULL COMMENT '事件等级',
			`tag` varchar(255) DEFAULT NULL COMMENT '模块',
			`origin` varchar(255) DEFAULT NULL COMMENT '设备名',
			`message` text COMMENT '信息',
			`add_time` datetime DEFAULT NULL COMMENT '日志时间',
			`source_ip` varchar(255) DEFAULT NULL COMMENT '源IP',
			`target_ip` varchar(255) DEFAULT NULL COMMENT '目的IP',
		  	`event_type` int(255) DEFAULT NULL COMMENT '事件类型，1：正常事件，2：异常事件',
		  	`level` int(255) DEFAULT NULL COMMENT '事件等级，1：信息，2：注意，3：告警',
		  	`module` int(255) DEFAULT NULL COMMENT '事件模块，1：普通，2：USB，3：NIC，4：MODBUS_TCP',
		  	`context` text COMMENT '描述',
		  	PRIMARY KEY (`id`),
		  	KEY `module` (`module`),
		  	KEY `severity` (`severity`) USING BTREE,
		  	KEY `tag` (`tag`) USING BTREE,
			KEY `level` (`level`) USING BTREE,
			KEY `source_ip` (`source_ip`) USING BTREE,
			KEY `target_ip` (`target_ip`) USING BTREE
		) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT='防火墙日志';
	</update>
	
	
	<update id="createGatewayLogTable">
		CREATE TABLE ${table_name} (
			`id` bigint(20) NOT NULL AUTO_INCREMENT,
			`facility` int(11) DEFAULT NULL COMMENT '',
			`severity` int(11) DEFAULT NULL COMMENT '事件等级',
			`tag` varchar(255) DEFAULT NULL COMMENT '模块',
			`origin` varchar(255) DEFAULT NULL COMMENT '设备名',
			`message` text COMMENT '信息',
			`add_time` datetime DEFAULT NULL COMMENT '日志时间',
			`source_ip` varchar(255) DEFAULT NULL COMMENT '源IP',
			`target_ip` varchar(255) DEFAULT NULL COMMENT '目的IP',
		  	`event_type` int(255) DEFAULT NULL COMMENT '事件类型，1：正常事件，2：异常事件',
		  	`level` int(255) DEFAULT NULL COMMENT '事件等级，1：信息，2：注意，3：告警',
		  	`module` int(255) DEFAULT NULL COMMENT '事件模块，1：普通，2：USB，3：NIC，4：MODBUS_TCP',
		  	`context` text COMMENT '描述',
		  	PRIMARY KEY (`id`),
		  	KEY `module` (`module`),
		  	KEY `severity` (`severity`) USING BTREE,
		  	KEY `tag` (`tag`) USING BTREE,
			KEY `level` (`level`) USING BTREE,
			KEY `source_ip` (`source_ip`) USING BTREE,
			KEY `target_ip` (`target_ip`) USING BTREE
		) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT='防火墙日志';
	</update>
	
	
	<update id="dropTable">
		DROP TABLE ${table_name}
	</update>
	
	

</mapper>